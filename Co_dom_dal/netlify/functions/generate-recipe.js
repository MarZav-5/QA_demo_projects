// Netlify Function ‚Äì generate-recipe.js
// Pou≈æ√≠va OpenAI Responses API (nov√© unified rozhranie)

import OpenAI from "openai";

const client = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY, // üîí ulo≈æen√© v Netlify environment variables
});

export default async (request) => {
  try {
    const body = await request.json();
    const ingredients = body.ingredients || [];
    const lang = body.lang || "sk";

    if (!ingredients.length) {
      return Response.json(
        { error: "NO_INGREDIENTS", detail: "Neboli zadan√© ≈æiadne ingrediencie." },
        { status: 400 }
      );
    }

    // --- Prompt pre OpenAI ---------------------------------------------------
    const prompt = `
Si sk√∫sen√Ω ≈°√©fkuch√°r. Vytvor jednoduch√Ω, chutn√Ω recept zo zadan√Ωch ingredienci√≠:
${ingredients.join(", ")}.

Odpovedz v√Ωluƒçne v JSON form√°te:
{
  "title": "N√°zov jedla",
  "servings": 2,
  "timeMinutes": 15,
  "ingredients": [
    {"item": "n√°zov suroviny", "amount": "mno≈æstvo"},
    ...
  ],
  "steps": ["krok 1", "krok 2", "krok 3"]
}

Pou≈æi jazyk: ${lang === "sk" ? "slovenƒçina" : "angliƒçtina"}.
`;

    // --- Volanie OpenAI API --------------------------------------------------
    const resp = await client.responses.create({
      model: "gpt-4.1-mini", // lacnej≈°√≠, r√Ωchly model vhodn√Ω na text
      input: prompt,
      max_output_tokens: 500,
    });

    const text = resp.output_text || "";
    let data;

    // Pokus o parse ƒçist√©ho JSONu
    try {
      data = JSON.parse(text);
    } catch {
      const match = text.match(/\{[\s\S]*\}/);
      data = match ? JSON.parse(match[0]) : null;
    }

    if (!data) {
      return Response.json(
        { error: "PARSE_ERROR", detail: "Nepodarilo sa spracova≈• odpoveƒè modelu." },
        { status: 502 }
      );
    }

    // --- V≈°etko OK ‚Üí vr√°≈• JSON odpoveƒè ---------------------------------------
    return Response.json(data, {
      headers: { "Access-Control-Allow-Origin": "*" },
    });

  } catch (e) {
    console.error("Chyba AI volania:", e);

    const msg = String(e?.message || "");
    const isQuota = (e?.status === 429) || /quota|rate limit/i.test(msg);

    if (isQuota) {
      return Response.json(
        { error: "QUOTA", detail: "Prekroƒçen√Ω limit alebo ch√Ωba kredit (429)." },
        { status: 429 }
      );
    }

    return Response.json(
      { error: "SERVER", detail: msg || "Nezn√°ma chyba servera." },
      { status: 500 }
    );
  }
};
